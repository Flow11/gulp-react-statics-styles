"use strict";

require("6to5/polyfill");var Promise = require("bluebird");var __DEV__ = (process.env.NODE_ENV !== "production");
var through = require("through2");
var gutil = require("gulp-util");
var _ref = require("react-nexus-style");

var extractStyles = _ref.extractStyles;
var PluginError = gutil.PluginError;
var File = gutil.File;


var PLUGIN_NAME = "gulp-react-nexus-style";

module.exports = function (cachebust) {
  if (cachebust === undefined) cachebust = [];
  cachebust.forEach(function (module) {
    var r = require.resolve(module);
    if (require.cache[r]) {
      delete require.cache[r];
    }
  });

  return through.obj(function (file, enc, fn) {
    if (file.isNull()) {
      return fn(null, file);
    }
    if (file.isStream()) {
      return fn(new PluginError(PLUGIN_NAME, "Streaming not supported"));
    }
    var path = file.path;
    try {
      var r = require.resolve(path);
      if (require.cache[r]) {
        delete require.cache[r];
      }
      var Component = require(path);
      var styles = extractStyles(Component);
      var contents = new Buffer(styles);
      path = gutil.replaceExtension(path, "css");
      this.push(new File({ path: path, contents: contents }));
    } catch (err) {
      return fn(err);
    }
    return fn(null);
  });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEFBQUMsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEFBQUMsSUFBTSxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxZQUFZLENBQUMsQ0FBQztBQUN2SCxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEMsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1dBQ1QsT0FBTyxDQUFDLG1CQUFtQixDQUFDOztJQUE5QyxhQUFhLFFBQWIsYUFBYTtJQUNiLFdBQVcsR0FBVyxLQUFLLENBQTNCLFdBQVc7SUFBRSxJQUFJLEdBQUssS0FBSyxDQUFkLElBQUk7OztBQUV6QixJQUFNLFdBQVcsR0FBRyx3QkFBd0IsQ0FBQzs7QUFFN0MsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFTLFNBQVMsRUFBTztNQUFoQixTQUFTLGdCQUFULFNBQVMsR0FBRyxFQUFFO0FBQ3RDLFdBQVMsQ0FBQyxPQUFPLENBQUMsVUFBQyxNQUFNLEVBQUs7QUFDNUIsUUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNoQyxRQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkIsYUFBTyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3pCO0dBQ0YsQ0FBQyxDQUFDOztBQUVILFNBQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFTLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFO0FBQ3pDLFFBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFO0FBQ2hCLGFBQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUN2QjtBQUNELFFBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO0FBQ2xCLGFBQU8sRUFBRSxDQUFDLElBQUksV0FBVyxDQUFDLFdBQVcsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7S0FDcEU7UUFDSyxJQUFJLEdBQUssSUFBSSxDQUFiLElBQUk7QUFDVixRQUFJO0FBQ0YsVUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM5QixVQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkIsZUFBTyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO09BQ3pCO0FBQ0QsVUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzlCLFVBQUksTUFBTSxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN0QyxVQUFJLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQyxVQUFJLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztBQUMzQyxVQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFKLElBQUksRUFBRSxRQUFRLEVBQVIsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ3pDLENBQ0QsT0FBTSxHQUFHLEVBQUU7QUFDVCxhQUFPLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNoQjtBQUNELFdBQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQ2pCLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0aHJvdWdoID0gcmVxdWlyZSgndGhyb3VnaDInKTtcclxuY29uc3QgZ3V0aWwgPSByZXF1aXJlKCdndWxwLXV0aWwnKTtcclxuY29uc3QgeyBleHRyYWN0U3R5bGVzIH0gPSByZXF1aXJlKCdyZWFjdC1uZXh1cy1zdHlsZScpO1xyXG5jb25zdCB7IFBsdWdpbkVycm9yLCBGaWxlIH0gPSBndXRpbDtcclxuXHJcbmNvbnN0IFBMVUdJTl9OQU1FID0gJ2d1bHAtcmVhY3QtbmV4dXMtc3R5bGUnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjYWNoZWJ1c3QgPSBbXSkge1xyXG4gIGNhY2hlYnVzdC5mb3JFYWNoKChtb2R1bGUpID0+IHtcclxuICAgIGxldCByID0gcmVxdWlyZS5yZXNvbHZlKG1vZHVsZSk7XHJcbiAgICBpZihyZXF1aXJlLmNhY2hlW3JdKSB7XHJcbiAgICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW3JdO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gdGhyb3VnaC5vYmooZnVuY3Rpb24oZmlsZSwgZW5jLCBmbikge1xyXG4gICAgaWYoZmlsZS5pc051bGwoKSkge1xyXG4gICAgICByZXR1cm4gZm4obnVsbCwgZmlsZSk7XHJcbiAgICB9XHJcbiAgICBpZihmaWxlLmlzU3RyZWFtKCkpIHtcclxuICAgICAgcmV0dXJuIGZuKG5ldyBQbHVnaW5FcnJvcihQTFVHSU5fTkFNRSwgJ1N0cmVhbWluZyBub3Qgc3VwcG9ydGVkJykpO1xyXG4gICAgfVxyXG4gICAgbGV0IHsgcGF0aCB9ID0gZmlsZTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCByID0gcmVxdWlyZS5yZXNvbHZlKHBhdGgpO1xyXG4gICAgICBpZihyZXF1aXJlLmNhY2hlW3JdKSB7XHJcbiAgICAgICAgZGVsZXRlIHJlcXVpcmUuY2FjaGVbcl07XHJcbiAgICAgIH1cclxuICAgICAgbGV0IENvbXBvbmVudCA9IHJlcXVpcmUocGF0aCk7XHJcbiAgICAgIGxldCBzdHlsZXMgPSBleHRyYWN0U3R5bGVzKENvbXBvbmVudCk7XHJcbiAgICAgIGxldCBjb250ZW50cyA9IG5ldyBCdWZmZXIoc3R5bGVzKTtcclxuICAgICAgcGF0aCA9IGd1dGlsLnJlcGxhY2VFeHRlbnNpb24ocGF0aCwgJ2NzcycpO1xyXG4gICAgICB0aGlzLnB1c2gobmV3IEZpbGUoeyBwYXRoLCBjb250ZW50cyB9KSk7XHJcbiAgICB9XHJcbiAgICBjYXRjaChlcnIpIHtcclxuICAgICAgcmV0dXJuIGZuKGVycik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZm4obnVsbCk7XHJcbiAgfSk7XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==