"use strict";

require("6to5/polyfill");var Promise = require("bluebird");var __DEV__ = (process.env.NODE_ENV !== "production");
var through = require("through2");
var gutil = require("gulp-util");
var _ref = require("react-nexus-style");

var extractStyles = _ref.extractStyles;
var PluginError = gutil.PluginError;
var File = gutil.File;


var PLUGIN_NAME = "gulp-react-nexus-style";

module.exports = function (cachebust) {
  if (cachebust === undefined) cachebust = [];
  cachebust.forEach(function (module) {
    var r = require.resolve(module);
    if (require.cache[r]) {
      delete require.cache[r];
    }
  });

  return through.obj(function (file, enc, fn) {
    if (file.isNull()) {
      return fn(null, file);
    }
    if (file.isStream()) {
      return fn(new PluginError(PLUGIN_NAME, "Streaming not supported"));
    }
    var path = file.path;
    try {
      var r = require.resolve(path);
      if (require.cache[r]) {
        delete require.cache[r];
      }
      var Component = require(path);
      var styles = extractStyles(Component);
      var contents = new Buffer(styles);
      path = gutil.replaceExtension(path, ".css");
      this.push(new File({ path: path, contents: contents }));
    } catch (err) {
      return fn(err);
    }
    return fn(null);
  });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEFBQUMsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEFBQUMsSUFBTSxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxZQUFZLENBQUMsQ0FBQztBQUN2SCxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEMsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1dBQ1QsT0FBTyxDQUFDLG1CQUFtQixDQUFDOztJQUE5QyxhQUFhLFFBQWIsYUFBYTtJQUNiLFdBQVcsR0FBVyxLQUFLLENBQTNCLFdBQVc7SUFBRSxJQUFJLEdBQUssS0FBSyxDQUFkLElBQUk7OztBQUV6QixJQUFNLFdBQVcsR0FBRyx3QkFBd0IsQ0FBQzs7QUFFN0MsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFTLFNBQVMsRUFBTztNQUFoQixTQUFTLGdCQUFULFNBQVMsR0FBRyxFQUFFO0FBQ3RDLFdBQVMsQ0FBQyxPQUFPLENBQUMsVUFBQyxNQUFNLEVBQUs7QUFDNUIsUUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNoQyxRQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkIsYUFBTyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3pCO0dBQ0YsQ0FBQyxDQUFDOztBQUVILFNBQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFTLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFO0FBQ3pDLFFBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFO0FBQ2hCLGFBQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUN2QjtBQUNELFFBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO0FBQ2xCLGFBQU8sRUFBRSxDQUFDLElBQUksV0FBVyxDQUFDLFdBQVcsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7S0FDcEU7UUFDSyxJQUFJLEdBQUssSUFBSSxDQUFiLElBQUk7QUFDVixRQUFJO0FBQ0YsVUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM5QixVQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkIsZUFBTyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO09BQ3pCO0FBQ0QsVUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzlCLFVBQUksTUFBTSxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN0QyxVQUFJLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQyxVQUFJLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM1QyxVQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFKLElBQUksRUFBRSxRQUFRLEVBQVIsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ3pDLENBQ0QsT0FBTSxHQUFHLEVBQUU7QUFDVCxhQUFPLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNoQjtBQUNELFdBQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQ2pCLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0aHJvdWdoID0gcmVxdWlyZSgndGhyb3VnaDInKTtcbmNvbnN0IGd1dGlsID0gcmVxdWlyZSgnZ3VscC11dGlsJyk7XG5jb25zdCB7IGV4dHJhY3RTdHlsZXMgfSA9IHJlcXVpcmUoJ3JlYWN0LW5leHVzLXN0eWxlJyk7XG5jb25zdCB7IFBsdWdpbkVycm9yLCBGaWxlIH0gPSBndXRpbDtcblxuY29uc3QgUExVR0lOX05BTUUgPSAnZ3VscC1yZWFjdC1uZXh1cy1zdHlsZSc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY2FjaGVidXN0ID0gW10pIHtcbiAgY2FjaGVidXN0LmZvckVhY2goKG1vZHVsZSkgPT4ge1xuICAgIGxldCByID0gcmVxdWlyZS5yZXNvbHZlKG1vZHVsZSk7XG4gICAgaWYocmVxdWlyZS5jYWNoZVtyXSkge1xuICAgICAgZGVsZXRlIHJlcXVpcmUuY2FjaGVbcl07XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gdGhyb3VnaC5vYmooZnVuY3Rpb24oZmlsZSwgZW5jLCBmbikge1xuICAgIGlmKGZpbGUuaXNOdWxsKCkpIHtcbiAgICAgIHJldHVybiBmbihudWxsLCBmaWxlKTtcbiAgICB9XG4gICAgaWYoZmlsZS5pc1N0cmVhbSgpKSB7XG4gICAgICByZXR1cm4gZm4obmV3IFBsdWdpbkVycm9yKFBMVUdJTl9OQU1FLCAnU3RyZWFtaW5nIG5vdCBzdXBwb3J0ZWQnKSk7XG4gICAgfVxuICAgIGxldCB7IHBhdGggfSA9IGZpbGU7XG4gICAgdHJ5IHtcbiAgICAgIGxldCByID0gcmVxdWlyZS5yZXNvbHZlKHBhdGgpO1xuICAgICAgaWYocmVxdWlyZS5jYWNoZVtyXSkge1xuICAgICAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVtyXTtcbiAgICAgIH1cbiAgICAgIGxldCBDb21wb25lbnQgPSByZXF1aXJlKHBhdGgpO1xuICAgICAgbGV0IHN0eWxlcyA9IGV4dHJhY3RTdHlsZXMoQ29tcG9uZW50KTtcbiAgICAgIGxldCBjb250ZW50cyA9IG5ldyBCdWZmZXIoc3R5bGVzKTtcbiAgICAgIHBhdGggPSBndXRpbC5yZXBsYWNlRXh0ZW5zaW9uKHBhdGgsICcuY3NzJyk7XG4gICAgICB0aGlzLnB1c2gobmV3IEZpbGUoeyBwYXRoLCBjb250ZW50cyB9KSk7XG4gICAgfVxuICAgIGNhdGNoKGVycikge1xuICAgICAgcmV0dXJuIGZuKGVycik7XG4gICAgfVxuICAgIHJldHVybiBmbihudWxsKTtcbiAgfSk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9